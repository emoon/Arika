#include <Arika/Arika.h>
#include <Arika_internal/Arika_internal.h>
#include <QApplication>
#include <QMainWindow>
#include <QPushButton>

static QApplication* s_application;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct ARWidget
{
	QWidget* widget;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

template<class T> ARWidget* createWidget()
{
	T* widget = new T;

	ARWidget* arWidget = new ARWidget;
	arWidget->widget = widget; 

	return arWidget; 
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static ARWidget* windowCreateMain()
{
	ARWidget* arWidget = createWidget<QMainWindow>(); 
	arWidget->widget->show();

	return arWidget;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static ARWidget* pushButtonCreate()
{
	ARWidget* arWidget = createWidget<QPushButton>(); 
	QPushButton* button = (QPushButton*)arWidget->widget;
	button->setText("Test");

	//button->setGeometry(QRect(QPoint(100, 100), QSize(200, 50)));
	//button->resize(100, 100);

	printf("creating pushbutton\n");

	return arWidget;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int widgetSetTitle(ARWidget* arWidget, const char* title)
{
	arWidget->widget->setWindowTitle(title);

	return 1;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int widgetSetHeight(ARWidget* arWidget, int v)
{
	QSize size = arWidget->widget->size(); 
	size.setHeight(v);
	arWidget->widget->resize(size);

	return 1;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int widgetSetWidth(ARWidget* arWidget, int v)
{
	QSize size = arWidget->widget->size(); 
	size.setWidth(v);
	arWidget->widget->resize(size);

	return 1;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int widgetAttach(ARWidget* parent, ARWidget* widget)
{
	widget->widget->setParent(parent->widget);
	widget->widget->show();
	//widget->widget->resize(widget->widget->size());

	return 1;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int update()
{
	s_application->processEvents();

	return 1;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static ARFuncs s_arFuncs = 
{
	.window_create_main = windowCreateMain,
	.button_create = pushButtonCreate,
	.widget_set_title = widgetSetTitle,
	.widget_set_width = widgetSetWidth,
	.widget_set_height = widgetSetHeight,
	.widget_attach = widgetAttach,
	.update = update,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void init()
{
	int argc = 0;
	s_application = new QApplication(argc, (char**)0);

	ar_internal_init(&s_arFuncs);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern "C"
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// init

ARFuncs* ar_init_funcs()
{
	init();

	return &s_arFuncs;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
